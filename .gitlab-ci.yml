# GitLab CI jobs for SDP logging library

.env: &env
  variables:
    BUILD_PATH: src/ska_sdp_logging

# ============================================================================
# Build Python package
# ============================================================================

stages:
   - build
   - test
   - publish
   
.build_python:
  stage: build
  image: python:latest
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  <<: *env


# Executed on a non-master commit

build:ska-sdp-logging_dev:
  extends: .build_python
  script:
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except: [master]

# Executed on a master commit

build:ska-sdp-logging:
  extends: .build_python
  script:
    - python3 setup.py sdist bdist_wheel
  only: [master]

# ============================================================================
# Test Python package
# ============================================================================

test:ska-sdp-logging:
  stage: test
  image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:latest
  before_script:
    # Install from build artifacts
    - pip3 install ska-sdp-config
    - pip3 install ska-sdp-logging --find-links dist
  script:
    - pip3 install -r requirements.txt -r requirements-test.txt
    - python3 setup.py test
  after_script:
    # Move the coverage and unit test reports to the top level
    - ls
    - mv .coverage $CI_JOB_NAME.coverage
    - mv unit-tests.xml unit-tests-${CI_JOB_NAME}.xml
  artifacts:
    paths:
      - $CI_JOB_NAME.coverage
      - unit-tests-${CI_JOB_NAME}.xml
    expire_in: 1 week
    when: always
  <<: *env

# ============================================================================
# Publish Python package (master only)
# ============================================================================

publish:ska-sdp-logging:
  stage: publish
  dependencies:
    - build:ska-sdp-logging
  image: python:latest
  only: [master]
  variables:
    TWINE_USERNAME: $TWINE_USERNAME
    TWINE_PASSWORD: $TWINE_PASSWORD
  script:
    - python3 -m pip install twine
    - twine upload --repository-url $PYPI_REPOSITORY_URL dist/* || true
    - twine upload --skip-existing -u $PYPI_USER -p $PYPI_PASS dist/* || true
  <<: *env
